Script started on Wed 12 Sep 2018 02:23:10 PM PDT
]0;higbe005@empress:~/CS311/Queue[?1034h[higbe005@empress Queue]$ g++ queue.h queue/[K.cpp queuetest.cpp
]0;higbe005@empress:~/CS311/Queue[higbe005@empress Queue]$ ./a.out
************** Queue Test Program *************
This program tests the queue ADT implemented as
an array.  
It is a menu based program allowing you to test each method. 
It displays the entire queue whenever it is modified.
***********************************************

MENU: These are your options: 

   (1) Enqueue an element   
   (2) Display the entire queue  
   (3) Dequeue an element
   (4) Display the front element
   (5) Check to see if is it empty
   (6) Check to see if is it full
   (7) Go to Back
   (8) Get size
    Enter ( 0 ) to quit 
===>2
The current contents are: 
[ empty ]

MENU: These are your options: 

   (1) Enqueue an element   
   (2) Display the entire queue  
   (3) Dequeue an element
   (4) Display the front element
   (5) Check to see if is it empty
   (6) Check to see if is it full
   (7) Go to Back
   (8) Get size
    Enter ( 0 ) to quit 
===>1
Enter a string to be added : a
The updated contents of the queue are:  
[ a ]

MENU: These are your options: 

   (1) Enqueue an element   
   (2) Display the entire queue  
   (3) Dequeue an element
   (4) Display the front element
   (5) Check to see if is it empty
   (6) Check to see if is it full
   (7) Go to Back
   (8) Get size
    Enter ( 0 ) to quit 
===>1
Enter a string to be added : b
The updated contents of the queue are:  
[ a b ]

MENU: These are your options: 

   (1) Enqueue an element   
   (2) Display the entire queue  
   (3) Dequeue an element
   (4) Display the front element
   (5) Check to see if is it empty
   (6) Check to see if is it full
   (7) Go to Back
   (8) Get size
    Enter ( 0 ) to quit 
===>1
Enter a string to be added : c
The updated contents of the queue are:  
[ a b c ]

MENU: These are your options: 

   (1) Enqueue an element   
   (2) Display the entire queue  
   (3) Dequeue an element
   (4) Display the front element
   (5) Check to see if is it empty
   (6) Check to see if is it full
   (7) Go to Back
   (8) Get size
    Enter ( 0 ) to quit 
===>1
Enter a string to be added : d
The updated contents of the queue are:  
[ a b c d ]

MENU: These are your options: 

   (1) Enqueue an element   
   (2) Display the entire queue  
   (3) Dequeue an element
   (4) Display the front element
   (5) Check to see if is it empty
   (6) Check to see if is it full
   (7) Go to Back
   (8) Get size
    Enter ( 0 ) to quit 
===>1
Enter a string to be added : e
The updated contents of the queue are:  
[ a b c d e ]

MENU: These are your options: 

   (1) Enqueue an element   
   (2) Display the entire queue  
   (3) Dequeue an element
   (4) Display the front element
   (5) Check to see if is it empty
   (6) Check to see if is it full
   (7) Go to Back
   (8) Get size
    Enter ( 0 ) to quit 
===>1
Enter a string to be added : f
The updated contents of the queue are:  
[ a b c d e f ]

MENU: These are your options: 

   (1) Enqueue an element   
   (2) Display the entire queue  
   (3) Dequeue an element
   (4) Display the front element
   (5) Check to see if is it empty
   (6) Check to see if is it full
   (7) Go to Back
   (8) Get size
    Enter ( 0 ) to quit 
===>1
Enter a string to be added : g
The updated contents of the queue are:  
[ a b c d e f g ]

MENU: These are your options: 

   (1) Enqueue an element   
   (2) Display the entire queue  
   (3) Dequeue an element
   (4) Display the front element
   (5) Check to see if is it empty
   (6) Check to see if is it full
   (7) Go to Back
   (8) Get size
    Enter ( 0 ) to quit 
===>1
Enter a string to be added : h
The updated contents of the queue are:  
[ a b c d e f g h ]

MENU: These are your options: 

   (1) Enqueue an element   
   (2) Display the entire queue  
   (3) Dequeue an element
   (4) Display the front element
   (5) Check to see if is it empty
   (6) Check to see if is it full
   (7) Go to Back
   (8) Get size
    Enter ( 0 ) to quit 
===>1
Enter a string to be added : i
The updated contents of the queue are:  
[ a b c d e f g h i ]

MENU: These are your options: 

   (1) Enqueue an element   
   (2) Display the entire queue  
   (3) Dequeue an element
   (4) Display the front element
   (5) Check to see if is it empty
   (6) Check to see if is it full
   (7) Go to Back
   (8) Get size
    Enter ( 0 ) to quit 
===>1
Enter a string to be added : j
The updated contents of the queue are:  
[ a b c d e f g h i j ]

MENU: These are your options: 

   (1) Enqueue an element   
   (2) Display the entire queue  
   (3) Dequeue an element
   (4) Display the front element
   (5) Check to see if is it empty
   (6) Check to see if is it full
   (7) Go to Back
   (8) Get size
    Enter ( 0 ) to quit 
===>3 4
a is at the front.

MENU: These are your options: 

   (1) Enqueue an element   
   (2) Display the entire queue  
   (3) Dequeue an element
   (4) Display the front element
   (5) Check to see if is it empty
   (6) Check to see if is it full
   (7) Go to Back
   (8) Get size
    Enter ( 0 ) to quit 
===>3
a has been dequeued.
The updated contents of the queue are: [ b c d e f g h i j ]

MENU: These are your options: 

   (1) Enqueue an element   
   (2) Display the entire queue  
   (3) Dequeue an element
   (4) Display the front element
   (5) Check to see if is it empty
   (6) Check to see if is it full
   (7) Go to Back
   (8) Get size
    Enter ( 0 ) to quit 
===>4
b is at the front.

MENU: These are your options: 

   (1) Enqueue an element   
   (2) Display the entire queue  
   (3) Dequeue an element
   (4) Display the front element
   (5) Check to see if is it empty
   (6) Check to see if is it full
   (7) Go to Back
   (8) Get size
    Enter ( 0 ) to quit 
===>1
Enter a string to be added : k
The updated contents of the queue are:  
[ b c d e f g h i j k ]

MENU: These are your options: 

   (1) Enqueue an element   
   (2) Display the entire queue  
   (3) Dequeue an element
   (4) Display the front element
   (5) Check to see if is it empty
   (6) Check to see if is it full
   (7) Go to Back
   (8) Get size
    Enter ( 0 ) to quit 
===>8
10 elements are in Queue.

MENU: These are your options: 

   (1) Enqueue an element   
   (2) Display the entire queue  
   (3) Dequeue an element
   (4) Display the front element
   (5) Check to see if is it empty
   (6) Check to see if is it full
   (7) Go to Back
   (8) Get size
    Enter ( 0 ) to quit 
===>2
The current contents are: 
[ b c d e f g h i j k ]

MENU: These are your options: 

   (1) Enqueue an element   
   (2) Display the entire queue  
   (3) Dequeue an element
   (4) Display the front element
   (5) Check to see if is it empty
   (6) Check to see if is it full
   (7) Go to Back
   (8) Get size
    Enter ( 0 ) to quit 
===>7
[ c d e f g h i j k b ]

MENU: These are your options: 

   (1) Enqueue an element   
   (2) Display the entire queue  
   (3) Dequeue an element
   (4) Display the front element
   (5) Check to see if is it empty
   (6) Check to see if is it full
   (7) Go to Back
   (8) Get size
    Enter ( 0 ) to quit 
===>2
The current contents are: 
[ c d e f g h i j k b ]

MENU: These are your options: 

   (1) Enqueue an element   
   (2) Display the entire queue  
   (3) Dequeue an element
   (4) Display the front element
   (5) Check to see if is it empty
   (6) Check to see if is it full
   (7) Go to Back
   (8) Get size
    Enter ( 0 ) to quit 
===>0
Bye bye - ending the queue test program
]0;higbe005@empress:~/CS311/Queue[higbe005@empress Queue]$ exit
exit

Script done on Wed 12 Sep 2018 02:24:50 PM PDT
